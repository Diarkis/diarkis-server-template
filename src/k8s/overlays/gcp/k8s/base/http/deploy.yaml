apiVersion: apps/v1
kind: Deployment
metadata:
  name: http
  labels:
    component: http
spec:
  replicas: 1
  selector:
    matchLabels:
      component: http
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: http
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        ad.datadoghq.com/nginx.check_names: '["nginx"]'
        ad.datadoghq.com/nginx.init_configs: '[{}]'
        ad.datadoghq.com/nginx.instances: '[{"nginx_status_url": "http://%%host%%:8080/nginx_status"}]'
        ad.datadoghq.com/nginx.logs: '[{"source": "nginx", "service": "nginx"}]'
    spec:
      terminationGracePeriodSeconds: 10      
      initContainers:
      - image: alpine:latest
        name: tuner
        command:
        - /bin/sh
        - -c
        - |
          sysctl -w kernel.msgmax=65536
          sysctl -w kernel.msgmnb=65536
          sysctl -w net.netfilter.nf_conntrack_max=1048576
          sysctl -w net.core.somaxconn=32768
          sysctl -w net.ipv4.tcp_syncookies=0
          sysctl -w net.ipv4.tcp_max_syn_backlog=32768
        imagePullPolicy: Always
        securityContext:
          privileged: true
      containers:
      - name: http
        readinessProbe:
          httpGet:
            path: /hello
            port: 7000
        livenessProbe:
          httpGet:
            path: /hello
            port: 7000            
        securityContext:
          runAsUser: 1000
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          privileged: false
        image: http
        imagePullPolicy: Always
        command:
          - /go/bin/http
        env:
          - name: ROLE
            value: http
          - name: DIARKIS_CLOUD_ENV
            value: GCP
          - name: DIARKIS_FIELD_MOD
            value: "true"
        volumeMounts:
        - mountPath: /configs/http
          name: http-conf
        - mountPath: /configs/shared
          name: shared-conf          
        - mountPath:  /bin/tools/configs
          name: hc-conf          
        ports:
        - name: http
          containerPort: 7000
      volumes:
      - name: cache
        emptyDir: {}
      - name: pid
        emptyDir: {}
      - name: http-conf
        configMap:
          name: http-conf
      - name: shared-conf
        configMap:
          name: shared-conf
      - name: hc-conf
        configMap:
          name: hc-conf
